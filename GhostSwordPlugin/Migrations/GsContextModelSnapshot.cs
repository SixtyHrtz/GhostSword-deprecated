// <auto-generated />
using System;
using GhostSwordPlugin;
using GhostSwordPlugin.Enums;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace GhostSwordPlugin.Migrations
{
    [DbContext(typeof(GsContext))]
    partial class GsContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.0-rtm-30799")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("GhostSwordPlugin.Models.Dialogue", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("LinkName")
                        .IsRequired();

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<string>("Text")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue("");

                    b.HasKey("Id");

                    b.ToTable("Dialogues");
                });

            modelBuilder.Entity("GhostSwordPlugin.Models.Item", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description");

                    b.Property<string>("Emoji");

                    b.Property<int>("ItemTypeId")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(1);

                    b.Property<string>("Name")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("ItemTypeId");

                    b.ToTable("Items");
                });

            modelBuilder.Entity("GhostSwordPlugin.Models.ItemDiscovery", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ItemId");

                    b.Property<long>("MaxAmount");

                    b.Property<long>("MinAmount");

                    b.Property<int>("PlaceId");

                    b.Property<float>("Rate");

                    b.Property<string>("Text")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("ItemId");

                    b.HasIndex("PlaceId");

                    b.ToTable("ItemDiscoveries");
                });

            modelBuilder.Entity("GhostSwordPlugin.Models.ItemType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("ItemTypes");
                });

            modelBuilder.Entity("GhostSwordPlugin.Models.Journey", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("newid()");

                    b.Property<long>("Duration");

                    b.Property<int>("PlaceAdjacencyId");

                    b.Property<int>("PlayerId");

                    b.Property<DateTime>("StartTime");

                    b.HasKey("Guid");

                    b.HasIndex("PlaceAdjacencyId");

                    b.HasIndex("PlayerId");

                    b.HasIndex("Guid", "PlayerId", "PlaceAdjacencyId")
                        .IsUnique();

                    b.ToTable("Journeys");
                });

            modelBuilder.Entity("GhostSwordPlugin.Models.Npc", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("NpcInfoId");

                    b.Property<int>("NpcLinkId");

                    b.Property<long>("Phase");

                    b.Property<int>("PlaceId");

                    b.HasKey("Id");

                    b.HasIndex("NpcInfoId");

                    b.HasIndex("PlaceId");

                    b.HasIndex("NpcLinkId", "Phase")
                        .IsUnique();

                    b.ToTable("Npcs");
                });

            modelBuilder.Entity("GhostSwordPlugin.Models.NpcDialogue", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DialogueId");

                    b.Property<int>("NpcId");

                    b.HasKey("Id");

                    b.HasIndex("DialogueId");

                    b.HasIndex("NpcId");

                    b.ToTable("NpcDialogues");
                });

            modelBuilder.Entity("GhostSwordPlugin.Models.NpcInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Greetings")
                        .IsRequired();

                    b.Property<string>("Name")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("NpcInfos");
                });

            modelBuilder.Entity("GhostSwordPlugin.Models.NpcLink", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("NpcLinks");
                });

            modelBuilder.Entity("GhostSwordPlugin.Models.Place", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<long>("Phase");

                    b.Property<int>("PlaceLinkId");

                    b.HasKey("Id");

                    b.HasIndex("PlaceLinkId", "Phase")
                        .IsUnique();

                    b.ToTable("Places");
                });

            modelBuilder.Entity("GhostSwordPlugin.Models.PlaceAdjacency", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BeginText")
                        .IsRequired();

                    b.Property<string>("EndText")
                        .IsRequired();

                    b.Property<long>("JourneyDuration");

                    b.Property<int>("Place1Id");

                    b.Property<int>("Place2Id");

                    b.HasKey("Id");

                    b.HasIndex("Place1Id");

                    b.HasIndex("Place2Id");

                    b.ToTable("PlaceAdjacencies");
                });

            modelBuilder.Entity("GhostSwordPlugin.Models.PlaceLink", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("PlaceLinks");
                });

            modelBuilder.Entity("GhostSwordPlugin.Models.Player", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<Guid?>("ChestItemGuid");

                    b.Property<Guid?>("FeetsItemGuid");

                    b.Property<Guid?>("HandsItemGuid");

                    b.Property<Guid?>("HeadItemGuid");

                    b.Property<bool>("IsBusy")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(false);

                    b.Property<Guid?>("LegsItemGuid");

                    b.Property<long>("MenuId")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(0L);

                    b.Property<int>("PlaceId")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(1);

                    b.Property<long>("UserId");

                    b.Property<string>("Username")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("ChestItemGuid");

                    b.HasIndex("FeetsItemGuid");

                    b.HasIndex("HandsItemGuid");

                    b.HasIndex("HeadItemGuid");

                    b.HasIndex("LegsItemGuid");

                    b.HasIndex("PlaceId");

                    b.ToTable("Players");
                });

            modelBuilder.Entity("GhostSwordPlugin.Models.PlayerItem", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("newid()");

                    b.Property<long>("Amount");

                    b.Property<int>("ItemId");

                    b.Property<int>("PlayerId");

                    b.HasKey("Guid");

                    b.HasIndex("ItemId");

                    b.HasIndex("PlayerId");

                    b.HasIndex("Guid", "PlayerId", "ItemId")
                        .IsUnique();

                    b.ToTable("PlayerItems");
                });

            modelBuilder.Entity("GhostSwordPlugin.Models.PlayerNpc", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("NpcLinkId");

                    b.Property<long>("Phase")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(1L);

                    b.Property<int>("PlayerId");

                    b.HasKey("Id");

                    b.HasIndex("NpcLinkId");

                    b.HasIndex("PlayerId", "NpcLinkId", "Phase")
                        .IsUnique();

                    b.ToTable("PlayerNpcs");
                });

            modelBuilder.Entity("GhostSwordPlugin.Models.PlayerPlace", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("Phase")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(1L);

                    b.Property<int>("PlaceLinkId");

                    b.Property<int>("PlayerId");

                    b.HasKey("Id");

                    b.HasIndex("PlaceLinkId");

                    b.HasIndex("PlayerId", "PlaceLinkId", "Phase")
                        .IsUnique();

                    b.ToTable("PlayerPlaces");
                });

            modelBuilder.Entity("GhostSwordPlugin.Models.Item", b =>
                {
                    b.HasOne("GhostSwordPlugin.Models.ItemType", "ItemType")
                        .WithMany()
                        .HasForeignKey("ItemTypeId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("GhostSwordPlugin.Models.ItemDiscovery", b =>
                {
                    b.HasOne("GhostSwordPlugin.Models.Item", "Item")
                        .WithMany()
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("GhostSwordPlugin.Models.Place", "Place")
                        .WithMany()
                        .HasForeignKey("PlaceId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("GhostSwordPlugin.Models.Journey", b =>
                {
                    b.HasOne("GhostSwordPlugin.Models.PlaceAdjacency", "PlaceAdjacency")
                        .WithMany("Journeys")
                        .HasForeignKey("PlaceAdjacencyId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("GhostSwordPlugin.Models.Player", "Player")
                        .WithMany("Journeys")
                        .HasForeignKey("PlayerId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("GhostSwordPlugin.Models.Npc", b =>
                {
                    b.HasOne("GhostSwordPlugin.Models.NpcInfo", "NpcInfo")
                        .WithMany()
                        .HasForeignKey("NpcInfoId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("GhostSwordPlugin.Models.NpcLink", "NpcLink")
                        .WithMany("Npcs")
                        .HasForeignKey("NpcLinkId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("GhostSwordPlugin.Models.Place", "Place")
                        .WithMany()
                        .HasForeignKey("PlaceId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("GhostSwordPlugin.Models.NpcDialogue", b =>
                {
                    b.HasOne("GhostSwordPlugin.Models.Dialogue", "Dialogue")
                        .WithMany()
                        .HasForeignKey("DialogueId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("GhostSwordPlugin.Models.Npc", "Npc")
                        .WithMany("NpcDialogues")
                        .HasForeignKey("NpcId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("GhostSwordPlugin.Models.Place", b =>
                {
                    b.HasOne("GhostSwordPlugin.Models.PlaceLink", "PlaceLink")
                        .WithMany("Places")
                        .HasForeignKey("PlaceLinkId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("GhostSwordPlugin.Models.PlaceAdjacency", b =>
                {
                    b.HasOne("GhostSwordPlugin.Models.Place", "Place1")
                        .WithMany()
                        .HasForeignKey("Place1Id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("GhostSwordPlugin.Models.Place", "Place2")
                        .WithMany()
                        .HasForeignKey("Place2Id")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("GhostSwordPlugin.Models.Player", b =>
                {
                    b.HasOne("GhostSwordPlugin.Models.PlayerItem", "ChestItem")
                        .WithMany()
                        .HasForeignKey("ChestItemGuid")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("GhostSwordPlugin.Models.PlayerItem", "FeetsItem")
                        .WithMany()
                        .HasForeignKey("FeetsItemGuid")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("GhostSwordPlugin.Models.PlayerItem", "HandsItem")
                        .WithMany()
                        .HasForeignKey("HandsItemGuid")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("GhostSwordPlugin.Models.PlayerItem", "HeadItem")
                        .WithMany()
                        .HasForeignKey("HeadItemGuid")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("GhostSwordPlugin.Models.PlayerItem", "LegsItem")
                        .WithMany()
                        .HasForeignKey("LegsItemGuid")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("GhostSwordPlugin.Models.Place", "Place")
                        .WithMany()
                        .HasForeignKey("PlaceId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("GhostSwordPlugin.Models.PlayerItem", b =>
                {
                    b.HasOne("GhostSwordPlugin.Models.Item", "Item")
                        .WithMany("PlayerItems")
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("GhostSwordPlugin.Models.Player", "Player")
                        .WithMany("PlayerItems")
                        .HasForeignKey("PlayerId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("GhostSwordPlugin.Models.PlayerNpc", b =>
                {
                    b.HasOne("GhostSwordPlugin.Models.NpcLink", "NpcLink")
                        .WithMany("PlayerNpcs")
                        .HasForeignKey("NpcLinkId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("GhostSwordPlugin.Models.Player", "Player")
                        .WithMany("PlayerNpcs")
                        .HasForeignKey("PlayerId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("GhostSwordPlugin.Models.PlayerPlace", b =>
                {
                    b.HasOne("GhostSwordPlugin.Models.PlaceLink", "PlaceLink")
                        .WithMany("PlayerPlaces")
                        .HasForeignKey("PlaceLinkId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("GhostSwordPlugin.Models.Player", "Player")
                        .WithMany("PlayerPlaces")
                        .HasForeignKey("PlayerId")
                        .OnDelete(DeleteBehavior.Restrict);
                });
#pragma warning restore 612, 618
        }
    }
}
